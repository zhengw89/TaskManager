@model TaskManager.Models.Ta.CreateTaskModel
@{
    ViewBag.Title = "创建任务";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>创建任务</h2>

@if (ViewBag.Error != null)
{
    <div class="alert alert-danger" role="alert">
        <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
        <span class="sr-only">Error:</span>
        @ViewBag.Error
    </div>
}
@using (Html.BeginForm("Create", "Task", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
{
    <div class="form-group">
        <div class="col-sm-2 control-label">
            @Html.LabelFor(m => m.Name)
        </div>
        <div class="col-sm-10">
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Name)
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-sm-2 control-label">
            @Html.LabelFor(m => m.NodeId)
        </div>
        <div class="col-sm-10">
            @Html.DropDownListFor(x => x.NodeId, Model.AllNodes, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.NodeId)
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-sm-2 control-label">
            @Html.LabelFor(m => m.Cron)
        </div>
        <div class="col-sm-10">
            @Html.TextBoxFor(m => m.Cron, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Cron)

        </div>
    </div>
    
    <div class="form-group">
        <div class="col-sm-2 control-label">
            @Html.LabelFor(m => m.DllName)
        </div>
        <div class="col-sm-10">
            @Html.TextBoxFor(m => m.DllName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.DllName)
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-sm-2 control-label">
            @Html.LabelFor(m => m.ClassName)
        </div>
        <div class="col-sm-10">
            @Html.TextBoxFor(m => m.ClassName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ClassName)
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-sm-2 control-label">
            @Html.LabelFor(m => m.Remark)
        </div>
        <div class="col-sm-10">
            @Html.TextBoxFor(m => m.Remark, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Remark)
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-sm-2 control-label">
            @Html.LabelFor(m => m.File)
        </div>
        <div class="col-sm-10">
            <input type="file" name="File" accept="application/x-zip-compressed" />
            @Html.ValidationMessageFor(m => m.File)
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-sm-2 control-label">
            <button class="btn btn-primary" type="submit">创建</button>
        </div>
    </div>
}